name: Run Unit Tests Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
jobs:
  linux-gtest:
    runs-on: ${{ matrix.os }}
    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      # Set up a matrix to run the following 2 configurations:
      # 1. <Linux, latest GCC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest]
        c_compiler: [gcc, clang]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
    steps:
    - uses: actions/checkout@v4
    - name: Update packages
      run: sudo add-apt-repository ppa:xmake-io/xmake && sudo apt-get update && sudo apt-get upgrade -y
    - name: Install xmake
      run: sudo apt-get install xmake
    - name: Build test executable
      run: xmake build BigInt_Test
    - name: Run Tests
      run: xmake run BigInt_Test